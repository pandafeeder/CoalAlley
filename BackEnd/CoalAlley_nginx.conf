worker_processes  1;

events {
    worker_connections  1024;
}


http {

    upstream node-app {
	least_conn;
	server node1:8080 weight=10 max_fails=3 fail_timeout=30s;
	server node2:8080 weight=10 max_fails=3 fail_timeout=30s;
	server node3:8080 weight=10 max_fails=3 fail_timeout=30s;
    }

    server {
	listen 8080;
	server_name localhost;
	location / {
	    proxy_pass http://node-app;
	    proxy_http_version 1.1;
	    proxy_set_header Upgrade $http_upgrade;
	    proxy_set_header Connection 'upgrade';
	    proxy_set_header Host $host;
	    proxy_cache_bypass $http_upgrade;
	}
    }

    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;
}



    # the upstream component nginx needs to connect to
    #upstream django {
    #    #server 127.0.0.1:8001; # for a web port socket (we'll use this first)
    #    server unix:///Users/qusr/GitHub/learnDjango/CoalAlley/BackEnd/CoalAlley.sock; # for a file socket
    #}

    # configuration of the server
    #server {
    #    # the port your site will be served on
    #    listen      8000;
    #    # the domain name it will serve for
    #    server_name localhost; # substitute your machine's IP address or FQDN
    #    charset     utf-8;
    #
    #    # max upload size
    #    client_max_body_size 75M;   # adjust to taste
    #
    #    # Django media
    #    location /media  {
    #        alias /Users/qusr/GitHub/learnDjango/CoalAlley/BackEnd/media; # your Django project's media files - amend as required
    #    }
    #
    #    location /static {
    #        alias /Users/qusr/GitHub/learnDjango/CoalAlley/BackEnd/static; # your Django project's static files - amend as required
    #    }
    #
    #    # Finally, send all non-media requests to the Django server.
    #    location / {
    #        uwsgi_pass  django;
    #        include     /Users/qusr/GitHub/learnDjango/CoalAlley/BackEnd/uwsgi_params; # the uwsgi_params file you installed
    #    }
    #}

